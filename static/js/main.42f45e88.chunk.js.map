{"version":3,"sources":["components/landingPage.js","components/aboutMe.js","components/contact.js","components/projects.js","components/resume.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["LandingPage","react_default","a","createElement","style","width","margin","lib","className","col","src","alt","href","rel","target","aria-hidden","React","Component","AboutMe","Contact","Projects","Resume","Main","Switch","Route","exact","path","component","App","title","scroll","Link","to","main","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gRAyCeA,mLApCP,OACIC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SACjCL,EAAAC,EAAAC,cAACI,EAAA,KAAD,CAAMC,UAAY,gBACdP,EAAAC,EAAAC,cAACI,EAAA,KAAD,CAAME,IAAK,IACPR,EAAAC,EAAAC,cAAA,OACIO,IAAM,iEACNC,IAAM,SACNH,UAAY,eAGZP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eACXP,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,qEAGAF,EAAAC,EAAAC,cAAA,OAAKK,UAAY,gBACbP,EAAAC,EAAAC,cAAA,KAAGS,KAAO,uDAAuDC,IAAM,sBAAsBC,OAAS,UAClGb,EAAAC,EAAAC,cAAA,KAAGK,UAAY,wBAAwBO,cAAY,UAEvDd,EAAAC,EAAAC,cAAA,KAAGS,KAAO,6CAA6CC,IAAM,sBAAsBC,OAAS,UACxFb,EAAAC,EAAAC,cAAA,KAAGK,UAAY,sBAAsBO,cAAY,UAErDd,EAAAC,EAAAC,cAAA,KAAGS,KAAO,yCAAyCC,IAAM,sBAAsBC,OAAS,UACpFb,EAAAC,EAAAC,cAAA,KAAGK,UAAY,wBAAwBO,cAAY,sBA1BjEC,IAAMC,WCOjBC,mLANP,OACIjB,EAAAC,EAAAC,cAAA,mCAHUa,IAAMC,WCQbE,mLANP,OACIlB,EAAAC,EAAAC,cAAA,kCAHUa,IAAMC,WCQbG,mLANP,OACInB,EAAAC,EAAAC,cAAA,mCAHWa,IAAMC,WCQdI,mLANP,OACIpB,EAAAC,EAAAC,cAAA,iCAHSa,IAAMC,4BCmBZK,EAZF,kBACTrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,KACItB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW3B,IACjCC,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAWT,IACxCjB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAWR,IACxClB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAWP,IACzCnB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAWN,cCuBhCO,mLA9BX,OACE3B,EAAAC,EAAAC,cAAA,OAAKK,UAAU,oBACbP,EAAAC,EAAAC,cAACI,EAAA,OAAD,KACEN,EAAAC,EAAAC,cAACI,EAAA,OAAD,CAAQC,UAAY,eAAeqB,MAAM,2BAA2BC,QAAM,GACxE7B,EAAAC,EAAAC,cAACI,EAAA,WAAD,KACEN,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMC,GAAG,WAAT,UACA/B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMC,GAAG,YAAT,YACA/B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMC,GAAG,aAAT,YACA/B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMC,GAAG,YAAT,aAGJ/B,EAAAC,EAAAC,cAACI,EAAA,OAAD,CAAQsB,MAAM,SACZ5B,EAAAC,EAAAC,cAACI,EAAA,WAAD,KACEN,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMC,GAAG,WAAT,UACA/B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMC,GAAG,YAAT,YACA/B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMC,GAAG,aAAT,YACA/B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMC,GAAG,YAAT,aAGJ/B,EAAAC,EAAAC,cAACI,EAAA,QAAD,KACEN,EAAAC,EAAAC,cAAA,OAAKK,UAAU,gBACbP,EAAAC,EAAAC,cAAC8B,EAAD,iBAvBIhB,aCMEiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,mFCTNC,IAASC,OACLvC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,KACIxC,EAAAC,EAAAC,cAACuC,EAAD,OAEFC,SAASC,eAAe,SDoHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.42f45e88.chunk.js","sourcesContent":["import React from \"react\"\r\nimport {Grid, Cell} from \"react-mdl\"\r\n\r\nclass LandingPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <div style={{ width: \"100%\", margin: \"auto\" }}>\r\n                <Grid className = \"landing-grid\">\r\n                    <Cell col={12}>\r\n                        <img \r\n                            src = \"https://miro.medium.com/max/2400/1*3TXf_aPgXuqoSi4qBRJURA.jpeg\"\r\n                            alt = \"avatar\"\r\n                            className = \"avatar-img\"\r\n                            />\r\n\r\n                            <div className=\"banner-text\">\r\n                                <h1>Full Stack Developer</h1>\r\n                                <hr />\r\n                                <p>\r\n                                    Python | JavaScript | MongoDB | Express | React | NodeJS\r\n                                </p>\r\n                                <div className = \"social-links\">\r\n                                    <a href = \"https://www.linkedin.com/in/gopalakrishnanvenkatesh/\" rel = \"noopener noreferrer\" target = \"_blank\">\r\n                                        <i className = \"fa fa-linkedin-square\" aria-hidden=\"true\" />\r\n                                    </a>\r\n                                    <a href = \"https://github.com/venkateshgopalakrishnan\" rel = \"noopener noreferrer\" target = \"_blank\">\r\n                                        <i className = \"fa fa-github-square\" aria-hidden=\"true\" />\r\n                                    </a>\r\n                                    <a href = \"https://www.facebook.com/gsahasranaman\" rel = \"noopener noreferrer\" target = \"_blank\">\r\n                                        <i className = \"fa fa-facebook-square\" aria-hidden=\"true\" />\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                    </Cell>\r\n                </Grid>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LandingPage","import React from \"react\"\r\n\r\nclass AboutMe extends React.Component   {\r\n    render()    {\r\n        return(\r\n            <div>About Me Page</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AboutMe","import React from \"react\"\r\n\r\nclass Contact extends React.Component   {\r\n    render()    {\r\n        return(\r\n            <div>Contact Page</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact","import React from \"react\"\r\n\r\nclass Projects extends React.Component   {\r\n    render()    {\r\n        return(\r\n            <div>Projects Page</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Projects","import React from \"react\"\r\n\r\nclass Resume extends React.Component   {\r\n    render()    {\r\n        return(\r\n            <div>Resume Page</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Resume","import React from \"react\"\r\nimport LandingPage from \"./landingPage\"\r\nimport AboutMe from \"./aboutMe\"\r\nimport Contact from \"./contact\"\r\nimport Projects from \"./projects\"\r\nimport Resume from \"./resume\"\r\n\r\nimport { Switch, Route } from \"react-router-dom\"\r\n\r\nconst Main = () => (\r\n    <Switch>\r\n        <Route exact path=\"/\" component={LandingPage} />\r\n        <Route exact path=\"/aboutMe\" component={AboutMe} />\r\n        <Route exact path=\"/contact\" component={Contact} />\r\n        <Route exact path=\"/projects\" component={Projects} />\r\n        <Route exact path=\"/resume\" component={Resume} />\r\n\r\n    </Switch>\r\n)\r\n\r\n\r\nexport default Main","import React, { Component } from 'react';\nimport './App.css';\nimport { Content, Navigation, Drawer, Header, Layout } from \"react-mdl\"\nimport Main from \"./components/main\"\nimport { Link } from \"react-router-dom\"\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"demo-big-content\">\n        <Layout>\n          <Header className = \"header-color\" title=\"Venkatesh Gopalakrishnan\" scroll>\n            <Navigation>\n              <Link to=\"/resume\">Resume</Link>\n              <Link to=\"/aboutMe\">About Me</Link>\n              <Link to=\"/projects\">Projects</Link>\n              <Link to=\"/contact\">Contact</Link>\n            </Navigation>\n          </Header>\n          <Drawer title=\"Title\">\n            <Navigation>\n              <Link to=\"/resume\">Resume</Link>\n              <Link to=\"/aboutMe\">About Me</Link>\n              <Link to=\"/projects\">Projects</Link>\n              <Link to=\"/contact\">Contact</Link>\n            </Navigation>\n          </Drawer>\n          <Content>\n            <div className=\"page-content\">\n              <Main />\n            </div>\n          </Content>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport {BrowserRouter} from \"react-router-dom\"\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}